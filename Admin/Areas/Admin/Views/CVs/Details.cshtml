@model CSE443_Project.Models.CV
@using System.IO

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div class="d-flex align-items-center">
            <a href="/Admin/CVs/Index" class="btn btn-light rounded-circle me-3 shadow-sm hover-scale">
                <i class="fas fa-arrow-left"></i>
            </a>
            <h2 class="mb-0 fw-bold text-primary gradient-text">CV Details</h2>
        </div>
        <div class="d-flex gap-2">
            @* <a href="/Admin/CVs/Download/@Model.Id" class="btn btn-outline-primary">
                <i class="fas fa-download me-2"></i>Download
            </a> *@
            @if (!string.IsNullOrEmpty(Model.FilePath) && System.IO.Path.GetExtension(Model.FilePath).ToLower() == ".pdf")
            {
                <a href="/Admin/CVs/Preview/@Model.Id" target="_blank" class="btn btn-outline-success">
                    <i class="fas fa-eye me-2"></i>View PDF
                </a>
            }
        </div>
    </div>

    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger mb-4 shadow-sm">
            <i class="fas fa-exclamation-triangle me-2"></i> @ViewBag.ErrorMessage
        </div>
    }

    <div class="row">
        <div class="col-md-8">
            <div class="card shadow-sm glass-effect mb-4">
                <div class="card-body p-4">
                    <h5 class="card-title mb-4 border-bottom pb-2">CV Information</h5>
                    <div class="row g-4">
                        <div class="col-md-6">
                            <div class="detail-item">
                                <span class="detail-label">CV Title</span>
                                <span class="detail-value">@Model.Title</span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="detail-item">
                                <span class="detail-label">Status</span>
                                <span class="detail-value">
                                    @if (Model.IsDefault)
                                    {
                                        <span class="badge bg-success">Default CV</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Regular CV</span>
                                        <form asp-action="SetDefault" method="post" class="d-inline ms-2">
                                            <input type="hidden" name="id" value="@Model.Id" />
                                            <button type="submit" class="btn btn-sm btn-outline-primary">
                                                Set as Default
                                            </button>
                                        </form>
                                    }
                                </span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="detail-item">
                                <span class="detail-label">Creation Date</span>
                                <span class="detail-value">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="detail-item">
                                <span class="detail-label">Last Update</span>
                                <span class="detail-value">
                                    @(Model.UpdatedAt.HasValue ? Model.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm") : "Never updated")
                                </span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="detail-item">
                                <span class="detail-label">Description</span>
                                <span class="detail-value">
                                    @(string.IsNullOrEmpty(Model.Description) ? "No description provided" : Model.Description)
                                </span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="detail-item">
                                <span class="detail-label">File</span>
                                <span class="detail-value">
                                    @if (!string.IsNullOrEmpty(Model.FilePath))
                                    {
                                        string fileExtension = System.IO.Path.GetExtension(Model.FilePath).ToLower();
                                        <div class="d-flex align-items-center">
                                            @if (fileExtension == ".pdf")
                                            {
                                                <i class="fas fa-file-pdf text-danger me-2 fa-lg"></i>
                                            }
                                            else if (fileExtension == ".doc" || fileExtension == ".docx")
                                            {
                                                <i class="fas fa-file-word text-primary me-2 fa-lg"></i>
                                            }
                                            else
                                            {
                                                <i class="fas fa-file text-secondary me-2 fa-lg"></i>
                                            }
                                            <span>@System.IO.Path.GetFileName(Model.FilePath)</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No file attached</span>
                                    }
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card shadow-sm glass-effect mb-4">
                <div class="card-body p-4">
                    <h5 class="card-title mb-4 border-bottom pb-2">Job Seeker Information</h5>
                    @if (Model.JobSeeker != null && Model.JobSeeker.User != null)
                    {
                        <div class="text-center mb-4">
                            <img src="https://ui-avatars.com/api/?name=@Model.JobSeeker.User.Username&size=128" 
                                class="rounded-circle border shadow-sm" width="100" height="100" 
                                alt="@Model.JobSeeker.User.Username">
                            <h5 class="mt-3 mb-1">@Model.JobSeeker.User.Username</h5>
                            <p class="text-muted">@Model.JobSeeker.User.Email</p>
                        </div>

                        <div class="detail-item">
                            <span class="detail-label">Phone</span>
                            <span class="detail-value">@(string.IsNullOrEmpty(Model.JobSeeker.User.Phone) ? "Not provided" : Model.JobSeeker.User.Phone)</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">Gender</span>
                            <span class="detail-value">@(string.IsNullOrEmpty(Model.JobSeeker.Gender) ? "Not specified" : Model.JobSeeker.Gender)</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">Address</span>
                            <span class="detail-value">
                                @(string.IsNullOrEmpty(Model.JobSeeker.User.Address) ? "Not provided" : Model.JobSeeker.User.Address)
                                @(!string.IsNullOrEmpty(Model.JobSeeker.User.City) ? ", " + Model.JobSeeker.User.City : "")
                            </span>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-user-circle fa-5x text-muted mb-3"></i>
                            <h5>Job Seeker Not Found</h5>
                            <p class="text-muted">The job seeker associated with this CV is not available.</p>
                        </div>
                    }
                </div>
            </div>

            <div class="card shadow-sm glass-effect">
                <div class="card-body p-4">
                    @* <h5 class="card-title mb-4 border-bottom pb-2">Actions</h5>
                    <div class="d-grid gap-2">
                        <a href="/Admin/CVs/Download/@Model.Id" class="btn btn-success">
                            <i class="fas fa-download me-2"></i>Download CV
                        </a>
                        <a href="/Admin/CVs/Delete/@Model.Id" class="btn btn-danger">
                            <i class="fas fa-trash me-2"></i>Delete CV
                        </a>
                    </div> *@
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Glass Effect */
    .glass-effect {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    /* Gradient Text */
    .gradient-text {
        background: linear-gradient(45deg, #2c3e50, #3498db);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    /* Detail items */
    .detail-item {
        margin-bottom: 1rem;
    }

    .detail-label {
        display: block;
        font-size: 0.875rem;
        color: #6c757d;
        margin-bottom: 0.25rem;
    }

    .detail-value {
        display: block;
        font-weight: 500;
    }

    /* Hover scale effect */
    .hover-scale {
        transition: transform 0.3s ease;
    }

    .hover-scale:hover {
        transform: scale(1.05);
    }

    /* Alert styling */
    .alert-danger {
        background-color: rgba(231, 76, 60, 0.15);
        border-color: rgba(231, 76, 60, 0.3);
        color: #c0392b;
    }
</style>