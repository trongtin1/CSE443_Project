@model Admin.Models.Authentication.LoginViewModel

@{
    ViewData["Title"] = "Admin Login";
    Layout = "_Layout";
}

<style>
    body {
        background-color: var(--dark-bg);
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
    }
    .auth-container {
        width: 100%;
        max-width: 420px;
        padding: 1rem;
    }
    .login-card {
        background-color: var(--dark-sidebar);
        border-radius: 0.5rem;
        border: 1px solid var(--border-color);
        overflow: hidden;
        box-shadow: 0 5px 25px rgba(0, 0, 0, 0.2);
    }
    .login-header {
        background-color: rgba(0, 0, 0, 0.2);
        border-bottom: 1px solid var(--border-color);
        padding: 1.5rem;
        text-align: center;
    }
    .login-header h1 {
        margin: 0;
        font-size: 1.5rem;
        font-weight: 600;
    }
    .login-body {
        padding: 2rem;
    }
    .login-footer {
        background-color: rgba(0, 0, 0, 0.1);
        border-top: 1px solid var(--border-color);
        padding: 1rem;
        text-align: center;
    }
    .form-floating > label {
        color: #718096;
    }
    .form-floating > .form-control {
        background-color: #1a2332;
        border-color: var(--border-color);
        color: white;
    }
    .form-floating > .form-control:focus {
        border-color: var(--accent-color);
        box-shadow: 0 0 0 0.25rem rgba(62, 130, 229, 0.25);
    }
    .form-check-input:checked {
        background-color: var(--accent-color);
        border-color: var(--accent-color);
    }
    .login-brand {
        margin-bottom: 1.5rem;
        font-size: 2rem;
        font-weight: 700;
        text-align: center;
        color: white;
    }
    .login-brand i {
        color: var(--accent-color);
        margin-right: 0.5rem;
    }
</style>

<div class="auth-container">
    <div class="login-brand">
        <i class="bi bi-briefcase"></i> Job Admin
    </div>

    <div class="login-card">
        <div class="login-header">
            <h1>Admin Login</h1>
        </div>
        <div class="login-body">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success mb-4">
                    @TempData["SuccessMessage"]
                </div>
            }
            
            <form asp-action="Login" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                
                <div class="form-floating mb-3">
                    <input asp-for="Username" class="form-control" placeholder="Username" autocomplete="username" />
                    <label asp-for="Username">Username</label>
                    <span asp-validation-for="Username" class="text-danger"></span>
                </div>
                
                <div class="form-floating mb-3">
                    <input asp-for="Password" class="form-control" placeholder="Password" autocomplete="current-password" />
                    <label asp-for="Password">Password</label>
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                
                <div class="form-check mb-3">
                    <input asp-for="RememberMe" class="form-check-input" />
                    <label asp-for="RememberMe" class="form-check-label">Remember me</label>
                </div>
                
                <div class="d-grid">
                    <button type="submit" class="btn btn-primary btn-lg">Login</button>
                </div>
            </form>
        </div>
        <div class="login-footer">
            <p class="mb-0">
                Don't have an account? <a asp-action="Register">Register</a>
            </p>
        </div>
    </div>
    
    <div class="text-center mt-3 text-muted">
        <small>&copy; @DateTime.Now.Year - Job Admin Dashboard</small>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
} 