@model Application
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        @if (Context.Session.GetInt32("EmployerId") != null)
                        {
                        <a asp-controller="Employer" asp-action="Applications" class="btn btn-outline-secondary me-2">
                            <i class="fas fa-arrow-left me-1"></i> Back to Applications
                        </a>
                        }
                        <h1 class="h3 mb-0">Application Details</h1>
                        <div class="dropdown">
                            <button class="btn btn-@(
                                Model.Status == "Pending" ? "warning" :
                                Model.Status == "Shortlisted" ? "info" :
                                Model.Status == "Interviewed" ? "primary" :
                                Model.Status == "Offered" ? "success" :
                                Model.Status == "Rejected" ? "danger" : "secondary")" 
                                type="button"
                                id="statusDropdown" 
                                data-bs-toggle="dropdown" 
                                aria-expanded="false">
                                <i class="fas fa-@(
                                    Model.Status == "Pending" ? "clock" :
                                    Model.Status == "Shortlisted" ? "list-check" :
                                    Model.Status == "Interviewed" ? "comments" :
                                    Model.Status == "Offered" ? "check-circle" :
                                    Model.Status == "Rejected" ? "times-circle" : "exchange-alt") me-1"></i> @Model.Status
                            </button>

                            @if (Context.Session.GetInt32("EmployerId") != null)
                            {
                            <ul class="dropdown-menu dropdown-menu-end shadow-sm"
                                aria-labelledby="statusDropdown">
                                <li class="dropdown-header">Update Status</li>
                                <li>
                                    <hr class="dropdown-divider">
                                </li>
                                @foreach (var status in new[] { "Pending", "Shortlisted", "Interviewed", "Offered", "Rejected" })
                                {
                                    var statusIcon = status == "Pending" ? "clock" :
                                                    status == "Shortlisted" ? "list-check" :
                                                    status == "Interviewed" ? "comments" :
                                                    status == "Offered" ? "check-circle" :
                                                    status == "Rejected" ? "times-circle" : "";
                                    
                                    var statusColor = status == "Pending" ? "warning" :
                                                    status == "Shortlisted" ? "info" :
                                                    status == "Interviewed" ? "primary" :
                                                    status == "Offered" ? "success" :
                                                    status == "Rejected" ? "danger" : "secondary";
                                    <li>
                                        <button type="button" 
                                            class="dropdown-item d-flex align-items-center py-2 update-status-btn @(Model.Status == status ? "active" : "")"
                                            data-status="@status" 
                                            data-application-id="@Model.Id"
                                            data-job-seeker-id="@Model.JobSeekerId">
                                            <span class="status-icon me-2 text-@statusColor">
                                                <i class="fas fa-@statusIcon"></i>
                                            </span>
                                            <span>@status</span>
                                            @if (Model.Status == status)
                                            {
                                                <span class="ms-auto">
                                                    <i class="fas fa-check text-success"></i>
                                                </span>
                                            }
                                        </button>
                                    </li>
                                }
                            </ul>
                            }
                        </div>
                    </div>
                    
                    <div class="row mb-4">
                        <div class="col-md-12">
                            <div class="card mb-3">
                                <div class="card-header bg-light">
                                    <h5 class="mb-0">Job Information</h5>
                                </div>
                                <div class="card-body">
                                    <div class="d-flex align-items-center mb-3">
                                        @if (Model.Job != null && Model.Job.Employer != null)
                                        {
                                            <img src="@Model.Job.Employer.Logo" alt="@Model.Job.Employer.CompanyName"
                                                class="rounded-circle me-3" style="width: 40px; height: 40px;">
                                            <div>
                                                <h5 class="mb-0">@Model.Job.JobTitle</h5>
                                                <span class="text-muted">@Model.Job.Employer.CompanyName</span>
                                            </div>
                                        }
                                        else
                                        {
                                            <div>
                                                <h5 class="mb-0">@(Model.Job?.JobTitle ?? "Job information unavailable")</h5>
                                                <span class="text-muted">Company information unavailable</span>
                                            </div>
                                        }
                                    </div>

                                    <div class="mb-3">
                                        @if (Model.Job != null)
                                        {
                                            <span class="badge bg-@(Model.Job.JobType == "Full-time" ? "success" : 
                                                                  Model.Job.JobType == "Part-time" ? "info" : 
                                                                  Model.Job.JobType == "Contract" ? "warning" : 
                                                                  Model.Job.JobType == "Internship" ? "secondary" : "primary")">
                                                @Model.Job.JobType
                                            </span>

                                            @if (Model.Job.IsRemote)
                                            {
                                                <span class="badge bg-light text-dark ms-1">Remote</span>
                                            }

                                            <span class="ms-2">
                                                <i class="fas fa-map-marker-alt text-muted me-1"></i> @Model.Job.Location
                                            </span>

                                            <span class="ms-2">
                                                <i class="fas fa-money-bill-wave text-muted me-1"></i>
                                                @(Model.Job.SalaryMin > 0 && Model.Job.SalaryMax > 0 ?
                                                    $"${Model.Job.SalaryMin:N0} - ${Model.Job.SalaryMax:N0}" :
                                                    "Competitive")
                                            </span>
                                        }
                                        else
                                        {
                                            <span>Job details unavailable</span>
                                        }
                                    </div>

                                    @if (Model.Job != null)
                                    {
                                        <a asp-controller="Job" asp-action="Details" asp-route-id="@Model.JobId" 
                                        class="btn btn-outline-primary btn-sm">View Job</a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-12">
                            <div class="card mb-3">
                                <div class="card-header bg-light">
                                    <h5 class="mb-0">Application Information</h5>
                                </div>
                                <div class="card-body">
                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <h6 class="text-muted mb-1">Application Date</h6>
                                            <p>@Model.ApplicationDate.ToString("MMMM dd, yyyy")</p>
                                        </div>
                                        @if (Model.ReviewDate.HasValue)
                                        {
                                            <div class="col-md-6">
                                                <h6 class="text-muted mb-1">Review Date</h6>
                                                <p>@Model.ReviewDate.Value.ToString("MMMM dd, yyyy")</p>
                                            </div>
                                        }
                                    </div>

                                    @if (Model.CV != null)
                                    {
                                        <div class="mb-3">
                                            <h6 class="text-muted mb-1">Resume/CV</h6>
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-file-pdf text-danger me-2 fs-4"></i>
                                                <div>
                                                    <p class="mb-0 fw-bold">@Model.CV.Title</p>
                                                    <small class="text-muted">@Model.CV.Description</small>
                                                </div>
                                                @if (!string.IsNullOrEmpty(Model.CV.FilePath))
                                                {
                                                    <div class="ms-auto">
                                                        <a href="@Model.CV.FilePath" target="_blank" class="btn btn-sm btn-outline-primary me-2">
                                                            <i class="fas fa-eye me-1"></i> View
                                                        </a>
                                                        <a href="@Model.CV.FilePath" download class="btn btn-sm btn-outline-secondary">
                                                            <i class="fas fa-download me-1"></i> Download
                                                        </a>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    }

                                    @if (!string.IsNullOrEmpty(Model.CoverLetter))
                                    {
                                        <div class="mb-3">
                                            <h6 class="text-muted mb-1">Cover Letter</h6>
                                            <div class="p-3 bg-light rounded">
                                                @Html.Raw(Model.CoverLetter)
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>                    <div class="row mb-4">
                        <div class="col-md-12">
                            <div class="card mb-3">                                <div class="card-header bg-light d-flex justify-content-between align-items-center">
                                    <h5 class="mb-0">Employer Notes</h5>
                                    @if (Context.Session.GetInt32("EmployerId") != null)
                                    {
                                        <button type="button" class="btn btn-sm btn-outline-primary" id="editNotesBtn">
                                            <i class="fas fa-edit me-1"></i> Edit Notes
                                        </button>
                                    }
                                </div>
                                <div class="card-body">
                                    <div id="notesDisplay" class="p-3 bg-light rounded">
                                        @if (!string.IsNullOrEmpty(Model.Notes))
                                        {
                                            @Html.Raw(Model.Notes)
                                        }
                                        else
                                        {
                                            <p class="text-muted mb-0">No notes added yet.</p>
                                        }
                                    </div>
                                                      @if (Context.Session.GetInt32("EmployerId") != null)
                    {
                        <div id="notesEditor" class="d-none">
                                            <form id="notesForm">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="id" value="@Model.Id" />
                                                <div class="mb-3">
                                                    <textarea name="notes" id="notesTextarea" class="form-control" rows="6" 
                                                              placeholder="Add your notes about this application...">@Html.Raw(Model.Notes)</textarea>
                                                </div>
                                                <div class="d-flex gap-2">
                                                    <button type="submit" class="btn btn-primary">
                                                        <i class="fas fa-save me-1"></i> Save Notes
                                                    </button>
                                                    <button type="button" class="btn btn-secondary" id="cancelNotesBtn">
                                                        <i class="fas fa-times me-1"></i> Cancel
                                                    </button>
                                                </div>
                                            </form>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Hidden form for status updates -->
                    <form id="statusUpdateForm" method="post" action="@Url.Action("UpdateStatus", "Application")" style="display: none;">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Id" />
                        <input type="hidden" name="status" id="statusInput" />
                        <input type="hidden" name="notes" id="notesInput" />
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Status update with real-time notification
            $(".update-status-btn").on("click", function() {
                var $button = $(this);
                var status = $button.data("status");
                var applicationId = $button.data("application-id");
                var jobSeekerId = $button.data("job-seeker-id");
                var $icon = $button.find(".status-icon i");
                var originalIcon = $icon.attr("class");
                
                // Show loading state
                $button.prop("disabled", true);
                $icon.attr("class", "fas fa-spinner fa-spin");
                
                // Set form values
                $("#statusInput").val(status);
                
                // Submit the form via AJAX
                $.ajax({
                    url: '@Url.Action("UpdateStatus", "Application")',
                    type: 'POST',
                    data: {
                        id: applicationId,
                        status: status,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            // Update UI
                            updateStatusUI(status);
                            
                        } else {
                            // Show error message
                            showNotification("Lỗi", "Không thể cập nhật trạng thái: " + (response.message || "Lỗi không xác định"));
                        }
                    },
                    error: function(xhr, status, error) {
                        showNotification("Lỗi", "Không thể cập nhật trạng thái: " + error);
                    },
                    complete: function() {
                        // Restore button state
                        $button.prop("disabled", false);
                        $icon.attr("class", originalIcon);
                    }
                });
            });
            
            // Update UI after status change
            function updateStatusUI(status) {
                // Update dropdown button
                var statusIcon = status === "Pending" ? "clock" :
                                status === "Shortlisted" ? "list-check" :
                                status === "Interviewed" ? "comments" :
                                status === "Offered" ? "check-circle" :
                                status === "Rejected" ? "times-circle" : "exchange-alt";
                                
                var statusColor = status === "Pending" ? "warning" :
                                status === "Shortlisted" ? "info" :
                                status === "Interviewed" ? "primary" :
                                status === "Offered" ? "success" :
                                status === "Rejected" ? "danger" : "secondary";
                
                $("#statusDropdown")
                    .removeClass("btn-warning btn-info btn-primary btn-success btn-danger btn-secondary")
                    .addClass("btn-" + statusColor)
                    .html('<i class="fas fa-' + statusIcon + ' me-1"></i> ' + status);
                
                // Update dropdown items
                $(".update-status-btn").removeClass("active").each(function() {
                    var $btn = $(this);
                    if ($btn.data("status") === status) {
                        $btn.addClass("active");
                        if (!$btn.find(".ms-auto").length) {
                            $btn.append('<span class="ms-auto"><i class="fas fa-check text-success"></i></span>');
                        }
                    } else {
                        $btn.find(".ms-auto").remove();
                    }
                });
            }
            
            // Notes editing functionality
            $('#editNotesBtn').on('click', function() {
                $('#notesDisplay').addClass('d-none');
                $('#notesEditor').removeClass('d-none');
                $('#notesTextarea').focus();
            });
            
            $('#cancelNotesBtn').on('click', function() {
                $('#notesEditor').addClass('d-none');
                $('#notesDisplay').removeClass('d-none');
                // Reset textarea to original value
                $('#notesTextarea').val('@Html.Raw(Html.Encode(Model.Notes ?? ""))');
            });
            
            $('#notesForm').on('submit', function(e) {
                e.preventDefault();
                
                var $form = $(this);
                var $saveBtn = $form.find('button[type="submit"]');
                var $icon = $saveBtn.find('i');
                var originalIcon = $icon.attr('class');
                var notes = $('#notesTextarea').val();
                var applicationId = $('input[name="id"]').val();
                
                // Show loading state
                $saveBtn.prop('disabled', true);
                $icon.attr('class', 'fas fa-spinner fa-spin');
                
                $.ajax({
                    url: '@Url.Action("UpdateNotes", "Application")',
                    type: 'POST',
                    data: {
                        id: applicationId,
                        notes: notes,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },                    
                    success: function(response) {
                        if (response.success) {
                            // Update the display with new notes
                            if (notes.trim()) {
                                $('#notesDisplay').html(response.notes);
                            } else {
                                $('#notesDisplay').html('<p class="text-muted mb-0">No notes added yet.</p>');
                            }
                            
                            // Hide editor and show display
                            $('#notesEditor').addClass('d-none');
                            $('#notesDisplay').removeClass('d-none');
                            
                            // Show success message
                        } else {
                            showNotification("Lỗi", "Không thể cập nhật ghi chú: " + (response.message || "Lỗi không xác định"));
                        }
                    },
                    error: function(xhr, status, error) {
                        showNotification("Lỗi", "Không thể cập nhật ghi chú: " + error);
                    },
                    complete: function() {
                        // Restore button state
                        $saveBtn.prop('disabled', false);
                        $icon.attr('class', originalIcon);
                    }
                });
            });
            
            // Helper function to show notifications
            function showNotification(title, message) {
                if (window.addNotification) {
                    window.addNotification(title, message, 'application');
                } else {
                    alert(title + ": " + message);
                }
            }
        });
    </script>
    
    <style>
        .dropdown-item {
            transition: all 0.2s ease;
        }
        
        .dropdown-item:hover {
            background-color: rgba(var(--bs-primary-rgb), 0.1);
        }
        
        .dropdown-item.active {
            background-color: rgba(var(--bs-primary-rgb), 0.15);
            color: var(--bs-body-color);
            font-weight: 500;
        }
        
        .status-icon {
            display: inline-flex;
            justify-content: center;
            align-items: center;
            width: 24px;
            height: 24px;
            border-radius: 50%;
            background-color: rgba(var(--bs-primary-rgb), 0.1);
        }
        
        .status-update-form {
            margin-bottom: 0;
        }
        
        .dropdown-menu {
            padding: 0.5rem 0;
            border: none;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }
        
        .dropdown-header {
            font-weight: 600;
            color: var(--bs-primary);
            padding: 0.5rem 1rem;
        }        
        .dropdown-divider {
            margin: 0.25rem 0;
        }
    </style>
}