@model Application
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <a asp-controller="Employer" asp-action="Applications" class="btn btn-outline-secondary me-2">
                            <i class="fas fa-arrow-left me-1"></i> Back to Applications
                        </a>
                        <h1 class="h3 mb-0">Application Details</h1>
                        @if (Context.Session.GetInt32("JobSeekerId") == null)
                        {
                            <div class="dropdown">
                                <button class="btn btn-@(
                                    Model.Status == "Pending" ? "warning" :
                                    Model.Status == "Shortlisted" ? "info" :
                                    Model.Status == "Interviewed" ? "primary" :
                                    Model.Status == "Offered" ? "success" :
                                    Model.Status == "Rejected" ? "danger" : "secondary")" 
                                    type="button"
                                    id="statusDropdown" 
                                    data-bs-toggle="dropdown" 
                                    aria-expanded="false">
                                    <i class="fas fa-@(
                                        Model.Status == "Pending" ? "clock" :
                                        Model.Status == "Shortlisted" ? "list-check" :
                                        Model.Status == "Interviewed" ? "comments" :
                                        Model.Status == "Offered" ? "check-circle" :
                                        Model.Status == "Rejected" ? "times-circle" : "exchange-alt") me-1"></i> @Model.Status
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end shadow-sm"
                                    aria-labelledby="statusDropdown">
                                    <li class="dropdown-header">Update Status</li>
                                    <li>
                                        <hr class="dropdown-divider">
                                    </li>
                                    @foreach (var status in new[] { "Pending", "Shortlisted", "Interviewed", "Offered", "Rejected" })
                                    {
                                        var statusIcon = status == "Pending" ? "clock" :
                                                        status == "Shortlisted" ? "list-check" :
                                                        status == "Interviewed" ? "comments" :
                                                        status == "Offered" ? "check-circle" :
                                                        status == "Rejected" ? "times-circle" : "";
                                        
                                        var statusColor = status == "Pending" ? "warning" :
                                                        status == "Shortlisted" ? "info" :
                                                        status == "Interviewed" ? "primary" :
                                                        status == "Offered" ? "success" :
                                                        status == "Rejected" ? "danger" : "secondary";
                                        <li>
                                            <form asp-controller="Application" asp-action="UpdateStatus"
                                                asp-route-id="@Model.Id" method="post" class="status-update-form">
                                                <input type="hidden" name="status" value="@status" />
                                                <button type="submit"
                                                    class="dropdown-item d-flex align-items-center py-2 @(Model.Status == status ? "active" : "")">
                                                    <span class="status-icon me-2 text-@statusColor">
                                                        <i class="fas fa-@statusIcon"></i>
                                                    </span>
                                                    <span>@status</span>
                                                    @if (Model.Status == status)
                                                    {
                                                        <span class="ms-auto">
                                                            <i class="fas fa-check text-success"></i>
                                                        </span>
                                                    }
                                                </button>
                                            </form>
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                        else
                        {
                            <div class="status-display">
                                <span class="btn btn-@(
                                    Model.Status == "Pending" ? "warning" :
                                    Model.Status == "Shortlisted" ? "info" :
                                    Model.Status == "Interviewed" ? "primary" :
                                    Model.Status == "Offered" ? "success" :
                                    Model.Status == "Rejected" ? "danger" : "secondary")">
                                    <i class="fas fa-@(
                                        Model.Status == "Pending" ? "clock" :
                                        Model.Status == "Shortlisted" ? "list-check" :
                                        Model.Status == "Interviewed" ? "comments" :
                                        Model.Status == "Offered" ? "check-circle" :
                                        Model.Status == "Rejected" ? "times-circle" : "exchange-alt") me-1"></i> @Model.Status
                                </span>
                            </div>
                        }
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-12">
                            <div class="card mb-3">
                                <div class="card-header bg-light">
                                    <h5 class="mb-0">Job Information</h5>
                                </div>
                                <div class="card-body">
                                    <div class="d-flex align-items-center mb-3">
                                        @if (Model.Job != null && Model.Job.Employer != null)
                                        {
                                            <img src="@Model.Job.Employer.Logo" alt="@Model.Job.Employer.CompanyName"
                                                class="rounded-circle me-3" style="width: 40px; height: 40px;">
                                            <div>
                                                <h5 class="mb-0">@Model.Job.JobTitle</h5>
                                                <span class="text-muted">@Model.Job.Employer.CompanyName</span>
                                            </div>
                                        }
                                        else
                                        {
                                            <div>
                                                <h5 class="mb-0">@(Model.Job?.JobTitle ?? "Job information unavailable")</h5>
                                                <span class="text-muted">Company information unavailable</span>
                                            </div>
                                        }
                                    </div>

                                    <div class="mb-3">
                                        @if (Model.Job != null)
                                        {
                                            <span class="badge bg-@(Model.Job.JobType == "Full-time" ? "success" : 
                                                                  Model.Job.JobType == "Part-time" ? "info" : 
                                                                  Model.Job.JobType == "Contract" ? "warning" : 
                                                                  Model.Job.JobType == "Internship" ? "secondary" : "primary")">
                                                @Model.Job.JobType
                                            </span>

                                            @if (Model.Job.IsRemote)
                                            {
                                                <span class="badge bg-light text-dark ms-1">Remote</span>
                                            }

                                            <span class="ms-2">
                                                <i class="fas fa-map-marker-alt text-muted me-1"></i> @Model.Job.Location
                                            </span>

                                            <span class="ms-2">
                                                <i class="fas fa-money-bill-wave text-muted me-1"></i>
                                                @(Model.Job.SalaryMin > 0 && Model.Job.SalaryMax > 0 ?
                                                    $"${Model.Job.SalaryMin:N0} - ${Model.Job.SalaryMax:N0}" :
                                                    "Competitive")
                                            </span>
                                        }
                                        else
                                        {
                                            <span>Job details unavailable</span>
                                        }
                                    </div>

                                    @if (Model.Job != null)
                                    {
                                        <a asp-controller="Job" asp-action="Details" asp-route-id="@Model.JobId" 
                                        class="btn btn-outline-primary btn-sm">View Job</a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-12">
                            <div class="card mb-3">
                                <div class="card-header bg-light">
                                    <h5 class="mb-0">Application Information</h5>
                                </div>
                                <div class="card-body">
                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <h6 class="text-muted mb-1">Application Date</h6>
                                            <p>@Model.ApplicationDate.ToString("MMMM dd, yyyy")</p>
                                        </div>
                                        @if (Model.ReviewDate.HasValue)
                                        {
                                            <div class="col-md-6">
                                                <h6 class="text-muted mb-1">Review Date</h6>
                                                <p>@Model.ReviewDate.Value.ToString("MMMM dd, yyyy")</p>
                                            </div>
                                        }
                                    </div>

                                    @if (Model.CV != null)
                                    {
                                        <div class="mb-3">
                                            <h6 class="text-muted mb-1">Resume/CV</h6>
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-file-pdf text-danger me-2 fs-4"></i>
                                                <div>
                                                    <p class="mb-0 fw-bold">@Model.CV.Title</p>
                                                    <small class="text-muted">@Model.CV.Description</small>
                                                </div>
                                                @if (!string.IsNullOrEmpty(Model.CV.FilePath))
                                                {
                                                    <div class="ms-auto">
                                                        <a href="@Model.CV.FilePath" target="_blank" class="btn btn-sm btn-outline-primary me-2">
                                                            <i class="fas fa-eye me-1"></i> View
                                                        </a>
                                                        <a href="@Model.CV.FilePath" download class="btn btn-sm btn-outline-secondary">
                                                            <i class="fas fa-download me-1"></i> Download
                                                        </a>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    }

                                    @if (!string.IsNullOrEmpty(Model.CoverLetter))
                                    {
                                        <div class="mb-3">
                                            <h6 class="text-muted mb-1">Cover Letter</h6>
                                            <div class="p-3 bg-light rounded">
                                                @Html.Raw(Model.CoverLetter)
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>                    <div class="row mb-4">
                        <div class="col-md-12">
                            <div class="card mb-3">
                                <div class="card-header bg-light">
                                    <h5 class="mb-0">Employer Notes</h5>
                                </div>
                                <div class="card-body">
                                    <div class="p-3 bg-light rounded">
                                        @if (!string.IsNullOrEmpty(Model.Notes))
                                        {
                                            @Html.Raw(Model.Notes)
                                        }
                                        else
                                        {
                                            <p class="text-muted mb-0">No notes added yet.</p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>                    <!-- Removed toast notification container -->

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Improve status update experience
            $(".status-update-form").on("submit", function(e) {
                e.preventDefault(); // Prevent form from submitting normally
                
                var $form = $(this);
                var $button = $form.find("button");
                var $icon = $button.find(".status-icon i");
                var originalIcon = $icon.attr("class");
                var newStatus = $form.find("input[name='status']").val();
                
                // Show loading state
                $button.prop("disabled", true);
                $icon.attr("class", "fas fa-spinner fa-spin");
                
                // Submit form via AJAX
                $.ajax({
                    url: $form.attr('action'),
                    method: 'POST',
                    data: $form.serialize(),
                    success: function(response) {
                        if (response.success) {
                            // Update the main status button
                            var statusColor = getStatusColor(newStatus);
                            var statusIcon = getStatusIcon(newStatus);
                            
                            $("#statusDropdown")
                                .removeClass()
                                .addClass(`btn btn-${statusColor}`)
                                .html(`<i class="fas fa-${statusIcon} me-1"></i> ${newStatus}`);
                            
                            // Update dropdown items
                            $(".status-update-form button").removeClass("active");
                            $form.find("button").addClass("active");
                            
                            // Show success message
                            alert('Status updated to ' + newStatus + ' successfully');
                        } else {
                            alert('Error updating status: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('Error updating status. Please try again.');
                    },
                    complete: function() {
                        // Restore button state
                        $button.prop("disabled", false);
                        $icon.attr("class", originalIcon);
                    }
                });
            });
            
            // Helper function to get status color
            function getStatusColor(status) {
                switch(status) {
                    case 'Pending': return 'warning';
                    case 'Shortlisted': return 'info';
                    case 'Interviewed': return 'primary';
                    case 'Offered': return 'success';
                    case 'Rejected': return 'danger';
                    default: return 'secondary';
                }
            }
            
            // Helper function to get status icon
            function getStatusIcon(status) {
                switch(status) {
                    case 'Pending': return 'clock';
                    case 'Shortlisted': return 'list-check';
                    case 'Interviewed': return 'comments';
                    case 'Offered': return 'check-circle';
                    case 'Rejected': return 'times-circle';
                    default: return 'exchange-alt';
                }
            }
        });
    </script>
    
    <style>
        .dropdown-item {
            transition: all 0.2s ease;
        }
        
        .dropdown-item:hover {
            background-color: rgba(var(--bs-primary-rgb), 0.1);
        }
        
        .dropdown-item.active {
            background-color: rgba(var(--bs-primary-rgb), 0.15);
            color: var(--bs-body-color);
            font-weight: 500;
        }
        
        .status-icon {
            display: inline-flex;
            justify-content: center;
            align-items: center;
            width: 24px;
            height: 24px;
            border-radius: 50%;
            background-color: rgba(var(--bs-primary-rgb), 0.1);
        }
        
        .status-update-form {
            margin-bottom: 0;
        }
        
        .dropdown-menu {
            padding: 0.5rem 0;
            border: none;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }
        
        .dropdown-header {
            font-weight: 600;
            color: var(--bs-primary);
            padding: 0.5rem 1rem;
        }        
        .dropdown-divider {
            margin: 0.25rem 0;
        }
    </style>
}